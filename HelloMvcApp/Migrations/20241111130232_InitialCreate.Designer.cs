// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WOD.WebUI.Data;

#nullable disable

namespace WOD.WebUI.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20241111130232_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WOD.Domain.Models.FootballClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<byte>("Games")
                        .HasColumnType("smallint")
                        .HasColumnName("games");

                    b.Property<byte>("GoalsAgainst")
                        .HasColumnType("smallint")
                        .HasColumnName("goalsagainst");

                    b.Property<int>("GoalsDifference")
                        .HasColumnType("integer");

                    b.Property<byte>("GoalsFor")
                        .HasColumnType("smallint")
                        .HasColumnName("goalsfor");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logo");

                    b.Property<byte>("Losses")
                        .HasColumnType("smallint")
                        .HasColumnName("losses");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<byte>("Rank")
                        .HasColumnType("smallint")
                        .HasColumnName("rank");

                    b.Property<byte>("Ties")
                        .HasColumnType("smallint")
                        .HasColumnName("ties");

                    b.Property<byte>("Wins")
                        .HasColumnType("smallint")
                        .HasColumnName("wins");

                    b.HasKey("Id")
                        .HasName("EPL_Table_pkey");

                    b.ToTable("footballclub_info", null, t =>
                        {
                            t.HasComment("Статистика футбольных клубов АПЛ 2024.");
                        });
                });

            modelBuilder.Entity("WOD.Domain.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("news_image");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("news_text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("news_pkey");

                    b.ToTable("News", t =>
                        {
                            t.HasComment("Новости\nСодержит: Заголовок, картинку, текст новости и ID.");
                        });
                });

            modelBuilder.Entity("WOD.WebUI.Admin", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("admins_pkey");

                    b.ToTable("admins", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
